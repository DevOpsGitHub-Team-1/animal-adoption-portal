name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    branches: [ master ]
env:
  AZURE_DEV_WEBAPP_NAME: animal-adoption-dev 
  AZURE_PROD_WEBAPP_NAME: animal-adoption-prod
  AZURE_WEBAPP_PACKAGE_PATH: '.'   
  AZURE_SUBSCRIPTION: cfe96ac1-4cd0-40ad-9751-b18802bf8822
  AZURE_TENANT: ab5eb3d0-6067-40ee-b4c0-a2ce05dbf039
  AZURE_DEPLOY_LOCATION: southeastasia
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
        source-url: https://nuget.pkg.github.com/alpha128/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - name: Restore dependencies
      run: dotnet restore
    - name: Run Unit Testing
      run: dotnet test  ${{ github.workspace }}/AnimalAdoption.Web.Portal.UnitTests/AnimalAdoption.Web.Portal.UnitTests.csproj --no-restore --verbosity n
    - name: Build
      run: dotnet build --configuration Release --no-restore


    #- name: List out directory contents
    #  run: |
    #    echo "Listing the contents of the GitHub workspace directory"
    #    ls ${{ github.workspace }}

    #    echo "Recursively listing all contents of the current directory"
    #    ls -R
    - name: Run dotnet publish
      run: dotnet publish ${{ github.workspace }}/AnimalAdoption.Web.Portal/AnimalAdoption.Web.Portal.csproj --output ./build/ --configuration Release --no-build
    - uses: actions/upload-artifact@v2
      with:
        name: animal-artifact
        path:  ${{ github.workspace }}/build/
    - uses: actions/upload-artifact@v2
      with:
        name: test-artifact
        path:  ${{ github.workspace }}/AnimalAdoption.Web.Portal.FunctionalTests/bin/Release/netcoreapp3.1/*

    - name: Upload ARM template
      uses: actions/upload-artifact@v2
      with:
        name: arm-template
        path:  deploy.json

    - name: Run dotnet pack
      run: dotnet pack ${{ github.workspace }}/AnimalAdoption.Common.Logic/AnimalAdoption.Common.Logic.csproj --configuration Release --no-build

    - name: Run dotnet nuget push
      run: dotnet nuget push ${{ github.workspace }}/AnimalAdoption.Common.Logic/bin/Release/*.nupkg --skip-duplicate

  release-to-dev:
     needs: build
     runs-on: ubuntu-latest
     env:
      AZURE_DEV_RG: DevOpsGitHub-2021-11-25-team-01-dev
      AZURE_DEV_KEY_VAULT: appsettingkv
      AZURE_DEV_SERVICE_PLAN: ASP-DevOpsGitHub20211125team01dev-8661
      
     steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: animal-artifact
          path: ./build/

      - name: Download ARM template
        uses: actions/download-artifact@v2
        with:
          name: arm-template
          path: ./arm-template/
          
    
      # Login to our AZURE
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CRED}}

      # Deploy arm
      - name: Run ARM deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ env.AZURE_DEV_RG }}
          template: ./arm-template/deploy.json
          parameters: resourceLocation=${{env.AZURE_DEPLOY_LOCATION}} tenantGuid=${{env.AZURE_TENANT}} appServicePlanName=${{env.AZURE_DEV_SERVICE_PLAN}} keyVaultName=${{env.AZURE_DEV_KEY_VAULT}} webAppName=${{ env.AZURE_DEV_WEBAPP_NAME }} resourceGroupServicePrincipalManagedApplicationObjectId=259611f3-7bbf-4d2d-b702-fc05c05997cb

      # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.AZURE_DEV_WEBAPP_NAME }}
          package: ./build/
      
      #Get Key Vault
      - name: Get the keyvault
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{env.AZURE_DEV_KEY_VAULT}}
          secrets: 'GlobalPassword, SimulatedFailureChance'  # comma separated list of secret keys that need to be fetched from the Key Vault 
        id: myGetSecretAction

      #Setup the ARM
          
      # Setting up the app settings
      - name: Set Web App ACR authentication
        uses: Azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZURE_DEV_WEBAPP_NAME }}
          app-settings-json: |
            [
                {
                    "name": "SimulatedFailureChance",
                    "value": "${{ steps.myGetSecretAction.outputs.SimulatedFailureChance }}",
                    "slotSetting": false
                },
                {
                    "name": "GlobalPassword",
                    "value": "${{ steps.myGetSecretAction.outputs.GlobalPassword }}",
                    "slotSetting": false
                }
            ]   

  run-functional-test:
    needs: release-to-dev
    runs-on: ubuntu-latest

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: test-artifact
        path: ./test-artifact/

    - name: Setup MSBuild Path
      uses: warrenbuckley/Setup-MSBuild@v1

    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1

    - name: VSTest
      run: vstest.console.exe  ./test-artifact/AnimalAdoption.Web.Portal.FunctionalTests.dll

  release-to-prod:
    runs-on: ubuntu-latest
    needs: release-to-dev
    env:
      AZURE_PROD_RG: DevOpsGitHub-2021-11-25-team-01-prod
      AZURE_PROD_KEY_VAULT: appsettingprodkv
      AZURE_PROD_SERVICE_PLAN: animal-adoption-serviceplan-prod

    steps:
      # Download arm template
      - name: Download arm-template
        uses: actions/download-artifact@v2
        with:
          name: arm-template
          path: ./arm-template/

      # Login to our AZURE
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_PROD_CRED}}

      # Deploy arm
      - name: Run ARM deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ env.AZURE_PROD_RG }}
          template: ./arm-template/deploy.json
          parameters: resourceLocation=${{env.AZURE_DEPLOY_LOCATION}} tenantGuid=${{env.AZURE_TENANT}} appServicePlanName=${{env.AZURE_PROD_SERVICE_PLAN}} keyVaultName=${{env.AZURE_PROD_KEY_VAULT}} webAppName=${{env.AZURE_PROD_WEBAPP_NAME}} resourceGroupServicePrincipalManagedApplicationObjectId=e2fb148b-4f98-4ce0-af48-777bb6281d26

      # Download build artifact
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: animal-artifact
          path: ./build/
          
      # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{env.AZURE_PROD_WEBAPP_NAME}}
          package: ./build/
      
      # Get Key Vault
      - name: Get the keyvault
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{env.AZURE_PROD_KEY_VAULT}}
          secrets: 'GlobalPassword, SimulatedFailureChance'  # comma separated list of secret keys that need to be fetched from the Key Vault 
        id: myGetSecretAction
        
      # Setting up the app settings
      - name: Set Web App ACR authentication
        uses: Azure/appservice-settings@v1
        with:
          app-name: ${{env.AZURE_PROD_WEBAPP_NAME}}
          app-settings-json: |
            [
                {
                    "name": "SimulatedFailureChance",
                    "value": "${{ steps.myGetSecretAction.outputs.SimulatedFailureChance }}",
                    "slotSetting": false
                },
                {
                    "name": "GlobalPassword",
                    "value": "${{ steps.myGetSecretAction.outputs.GlobalPassword }}",
                    "slotSetting": false
                }
            ] 
