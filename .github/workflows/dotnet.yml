name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    branches: [ master ]
env:
  AZURE_WEBAPP_NAME: animal-adoption-dev    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '3.1.0'           # set this to the dot net version to use
  FAILURE_CHANCE: 0         # for the app env
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
        source-url: https://nuget.pkg.github.com/alpha128/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - name: Restore dependencies
      run: dotnet restore
    - name: Run Unit Testing
      run: dotnet test  ${{ github.workspace }}/AnimalAdoption.Web.Portal.UnitTests/AnimalAdoption.Web.Portal.UnitTests.csproj --no-restore --verbosity n
    - name: Build
      run: dotnet build --configuration Release --no-restore
    #- name: List out directory contents
    #  run: |
    #    echo "Listing the contents of the GitHub workspace directory"
    #    ls ${{ github.workspace }}

    #    echo "Recursively listing all contents of the current directory"
    #    ls -R
    - name: Run dotnet publish
      run: dotnet publish ${{ github.workspace }}/AnimalAdoption.Web.Portal/AnimalAdoption.Web.Portal.csproj --output ./build/ --configuration Release --no-build
    - uses: actions/upload-artifact@v2
      with:
        name: animal-artifact
        path:  ${{ github.workspace }}/build/

    - name: Run dotnet pack
      run: dotnet pack ${{ github.workspace }}/AnimalAdoption.Common.Logic/AnimalAdoption.Common.Logic.csproj --configuration Release --no-build

    - name: Run dotnet nuget push
      run: dotnet nuget push ${{ github.workspace }}/AnimalAdoption.Common.Logic/bin/Release/*.nupkg --skip-duplicate

  release:
     needs: build
     runs-on: ubuntu-latest
     steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: animal-artifact
          path: ./build/
          
      # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.AZURE_PROFILE_DEV }} # Define secret variable in repository settings as per action documentation
          package: ./build/
    
      # Login to our AZURE
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CRED}}
          
      # Setting up the app settings
      - name: Set Web App ACR authentication
        uses: Azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          app-settings-json: |
            [
                {
                    "name": "SimulatedFailureChance",
                    "value": "${{ env.FAILURE_CHANCE }}",
                    "slotSetting": false
                },
                {
                    "name": "GlobalPassword",
                    "value": "${{ secrets.LOGIN_PASSWORD  }}",
                    "slotSetting": false
                }
            ]
      

